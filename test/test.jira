h1. Biggest heading

h2. Bigger heading

h1. Biggest heading
h2. Bigger heading
h3. Big heading
h4. Normal heading
h5. Small heading
h6. Smallest heading

*strong*
_emphasis_
{{monospaced}}
??citation??
-deleted-
+inserted+
^superscript^
~subscript~

{code:javascript}
var hello = 'world';
{code}

[http://google.com]
[Google|http://google.com]

GitHub Flavor
-deleted-

{code}
  preformatted piece of text
  so _no_ further _formatting_ is done here
{code}

_*Should be bold AND italic*_

* First li
* Second li
** Indented li
*** Three columns in li
* Back to first level li

# First li
# Second li
## Indented li
### Three columns in li
# Back to first level li

* Here's _italic_ inside li
* here's *bold* inside li
* Here's _*bold + italic*_ inside li
** Here they are in one line indented: _italic_ *bold*

bq. Here's a long single-paragraph block quote. It should look pretty and stuff.

{panel:title=A title}
Panel text
{panel}

||Heading 1||Heading 2||
|Col A1|Col A2|
|Col B1|Col B2|

{code}
Something
{code}

{code}
Something else
{code}

{code}
myDbgInfoPB = { _lastKeyTS: -1, _prevState: -1, _firstPtsAfterKey: false, PlayerState: { OPENING: 0, PLAYING: 1, PAUSED:  2, STOPPED: 3,CLOSED:  4 } };


nrdp.gibbon.addEventListener("key", function(event) {if ( event.data.type == "press" ) { myDbgInfoPB._lastKeyTS=nrdp.mono(); myDbgInfoPB._firstPtsAfterKey = true; } });

if(typeof nrdp.media.addEventListener != "undefined") { nrdp.media.addEventListener("updatepts", function(event) { var ts = nrdp.mono(); if ( myDbgInfoPB._firstPtsAfterKey == true ) { nrdp.log.error("keyToUpdatePTS,keyToEventGen,EventGenToJS=" +  (ts - myDbgInfoPB._lastKeyTS) + "," + (event.time - myDbgInfoPB._lastKeyTS) + "," + (ts - event.time) + " ms" ); myDbgInfoPB._firstPtsAfterKey = false; } }); nrdp.media.addEventListener("statechanged", function(event) { switch (event.state) { case myDbgInfoPB.PlayerState.OPENING: break; case myDbgInfoPB.PlayerState.PLAYING: break; case myDbgInfoPB.PlayerState.PAUSED: nrdp.log.error("keyToPlaybackPause  = " + (nrdp.mono() - myDbgInfoPB._lastKeyTS) + " ms"); break; case myDbgInfoPB.PlayerState.STOPPED: break; case myDbgInfoPB.PlayerState.CLOSED: nrdp.log.error("keyToPlaybackClosed  = " + (nrdp.mono() - myDbgInfoPB._lastKeyTS) + " ms"); break; default: break; } myDbgInfoPB._prevState=event.state; }); }
{code}